# .cursorrules 文件
本文件用于记录项目的规范和配置信息。请根据项目实际情况填写以下内容。

---

## 重要提示
- 每次编写代码必须更新 `.cursorrules` 文件，确保涵盖以下关键内容：
  - 项目背景：明确项目的目标和范围。
  - 编码标准：定义代码风格、命名规范等。
  - 首选库：列出项目中使用的库及其版本。
  - 文件结构：描述项目的目录结构和文件组织方式。
  - 性能优化指南：提供性能优化的建议和最佳实践。
  - 测试要求：明确测试的范围、方法和工具。
  - 文档规范：规定代码注释、README 文件等的编写标准。
  - 错误处理：定义错误处理机制和日志记录方式。
  - 项目下一步：明确项目下一步的计划和目标。
- 所有文件操作（创建、添加、修改、更新、优化、删除）必须记录序列号、文件名称和文件描述。

---

## 文件变更记录
### 创建文件
| 序列号 | 文件名称 | 文件描述 |
|-------|----------|----------|


### 添加文件
| 序列号 | 文件名称 | 文件描述 |
|-------|----------|----------|


### 修改文件
| 序列号 | 文件名称 | 文件描述 |
|-------|----------|----------|


### 更新文件
| 序列号 | 文件名称 | 文件描述 |
|-------|----------|----------|


### 优化文件
| 序列号 | 文件名称 | 文件描述 |
|-------|----------|----------|

### 删除文件
| 序列号 | 文件名称 | 文件描述 |
|-------|----------|----------|

---

## 项目背景
这是一个多人在线的股票交易游戏程序，包含以下主要功能模块：
1. **股票系统**：
   - 每个股票代表一家公司。
   - 公司基本信息包括公司名称、创建时间、所属玩家、初始资金等。
   - 支持股票交易，包括市价单和限价单。
   - 实时更新股票价格。
   - 持有超过51%股份的玩家获得公司控制权。
   - 当一家公司持有另一家公司80%股份时，两家公司自动合并。
2. **银行系统**：
   - 记录每笔交易和每家公司的账户余额。
   - 提供存款、取款、转账等基本功能。
   - 记录交易的详细信息，包括交易时间、类型、金额和双方。
3. **交易系统**：
   - 记录每家公司的交易情况。
   - 提供交易历史查询功能。
4. **AI系统**：
   - 管理AI玩家，支持创建AI玩家并进行交易。
   - AI玩家具备不同的交易策略，如保守型、激进型、平衡型。
   - AI玩家可以学习其他玩家的交易模式，优化自身策略。

---

## 编码标准

---

## 首选库
- **编程语言**：Python 3.11.9
- **Web框架**：Flask
- **模板引擎**：Jinja2
- **WSGI服务器**：Gunicorn
- **数据库**：MySQL 5.7.40
- **依赖管理**：通过`requirements.txt`文件管理依赖包，使用清华大学的PyPI镜像源 [https://pypi.tuna.tsinghua.edu.cn/simple](https://pypi.tuna.tsinghua.edu.cn/simple)。
- **架构决策**：保持简单架构，使用Flask内置的Jinja2模板引擎，不引入额外的复杂技术栈，以降低维护成本和提高开发效率。

---

## 性能优化指南
- 使用Gunicorn多进程模式提高并发处理能力
- 优化数据库查询，避免N+1查询问题
- 使用MySQL索引优化查询性能
- 合理使用Flask的上下文管理，避免资源泄漏

---

## 测试要求
- 使用unittest进行单元测试
- 使用Flask的测试客户端进行API测试
- 测试覆盖率目标：核心功能80%以上

---

## 文档规范
- API文档使用Flask自带的文档字符串生成
- 部署文档保持简洁，只包含必要信息
- 代码注释遵循PEP 8规范

---

## 文件结构
project/
├── app.py
├── requirements.txt
├── templates/
│   ├── base.html
│   ├── index.html
│   ├── login.html
│   └── dashboard.html
└── static/
    ├── css/
    │   └── style.css
    ├── js/
    │   └── main.js
    └── images/

---

## 错误处理

---

## 项目下一步
### 已实现功能

### 未实现功能

### 下一步计划

---