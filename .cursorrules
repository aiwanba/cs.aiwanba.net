# 编码规范文档

## 1. 沟通交流
- 所有交流使用中文。  
  (All communication should be in Chinese.)

### 2.1 一次性完成编写代码
- 尽量在一次性完成代码编写，避免多次提交和合并，以减少代码冲突的可能性。  
  (Try to complete code writing in one go to avoid multiple submissions and merges, reducing the possibility of code conflicts.)
- 在修改文件时，必须提示用户保存更改。  
  (When modifying files, it is mandatory to prompt the user to save changes.)
- 只有在与用户沟通确认后，才可以添加新的代码或项目。  
  (New code or projects can only be added after confirming with the user.)
- 编写代码：完整的编写所有代码和细节，添加新的功能和代码要跟我沟通。  
  (Write code: Complete all code and details, and communicate with me when adding new features and code.)

### 2.2 代码关联性
- 添加、修改或删除代码时，确保逻辑一致性。  
  (Ensure logical consistency when adding, modifying, or deleting code.)

### 2.3 代码复用性
- 编写可复用的代码，避免重复。  
  (Write reusable code to avoid duplication.)

### 2.4 上下文一致性
- 确保代码上下文一致，避免逻辑不连贯。  
  (Ensure contextual consistency in the code to avoid logical disconnection.)

### 2.5 编码规范
- 使用UTF-8编码，检查并修复编码问题，确保无错误。  
  (Use UTF-8 encoding, check and fix encoding issues to ensure no errors.)

### 2.6 命名规范
- 使用驼峰命名法，避免下划线命名法。  
  (Use camel case for naming, avoiding snake case.)

### 2.7 注释规范
- 使用中文注释，避免英文注释。  
  (Use Chinese comments, avoiding English comments.)

## 3. 注释运用
### 3.1 关键注释
- 在函数开头提供功能、输入和输出的注释，并对复杂代码段进行简要解释。  
  (Provide comments on functionality, input, and output at the beginning of functions, and briefly explain complex code segments.)

### 3.2 注释语言
- 注释应简洁明了，结合日常用语和少量技术术语，避免冗长。  
  (Comments should be concise and clear, combining everyday language with a few technical terms, avoiding verbosity.)