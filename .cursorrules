# 执行命令流程
## 1. 基本流程
1. **查看规则**：
   * 打开.cursorrules文件
   * 阅读项目规范要求
   * 确认操作是否符合规范

2. **查看项目进度**：
   * 检查当前开发阶段
   * 确认下一步任务
   * 了解任务目标和要求

3. **执行开发任务**：
   * 按照规范编写代码
   * 遵循开发计划
   * 完成具体功能实现

4. **操作记录**：
   * 在每次完成功能开发后，立即执行以下步骤：
     1. 打开 .cursorrules 文件
     2. 找到 "## 5. 记录操作" 部分
     3. 在最后一条记录后添加新记录
     4. 按照以下格式添加：
        序号: xxx
        类型: [新增/修改/修复/优化/删除]
        模块: [功能模块名称]
        描述: [具体内容]
        状态: [完成/进行中/计划]
     6. .cursorrules 保存文件


## 2. 环境配置
### 2.1 基本信息
- 项目名称: cs.aiwanba.net
- 项目端口: 5010
- Python版本: 3.11.9
- 域名: localhost

### 2.2 启动配置
- 启动方式: gunicorn -c gunicorn_conf.py app:app
- 项目路径: /www/wwwroot/cs.aiwanba.net
- 当前框架: flask
- 入口文件: /www/wwwroot/cs.aiwanba.net/app.py
- 通讯协议: gunicorn
- 应用名称: app

### 2.3 数据库配置
- 数据库: MySQL 5.7.40
- 数据库名: cs_aiwanba_net
- 用户名: cs_aiwanba_net
- 密码: sQz9HSnF5ZcXj9SX
- 主机: localhost
- 端口: 3306

### 2.4 依赖管理
- 依赖文件: requirements.txt
- 镜像源: https://pypi.tuna.tsinghua.edu.cn/simple
- 安装命令: pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

### 2.5 Gunicorn配置
配置文件路径: /www/wwwroot/cs.aiwanba.net/gunicorn_conf.py
主要配置:
- workers: 4
- threads: 2
- user: 'www'
- worker_class: 'uvicorn.workers.UvicornWorker'
- bind: '0.0.0.0:5010'
- 日志级别: info


## 3. 技术栈配置
### 3.1 后端技术栈
- **主框架**: Flask 2.0+ (提供RESTful API)
- **ORM框架**: SQLAlchemy 2.0+
- **数据库**: MySQL 5.7.40
- **缓存系统**: Flask-Caching (使用 SimpleCache 后端)
- **WebSocket**: Flask-SocketIO
- **跨域处理**: Flask-CORS

### 3.2 前端技术栈
- **框架**: Vue.js 3.0+ (独立部署)
- **UI组件库**: Element Plus
- **图表库**: ECharts 5.0+
- **构建工具**: Vite (用于前端打包)

### 3.3 开发工具
- **IDE**: VSCode
- **版本控制**: Git
- **数据库工具**: phpMyAdmin 5.2.1  
- **代码规范**: 
  - Python: PEP 8
  - JavaScript: ESLint

### 3.4 部署相关
- **Web服务器**: Nginx (同时用于前端静态文件和后端反向代理)
- **应用服务器**: Gunicorn
- **进程管理**: Supervisor

### 3.5 项目结构
```
project/
├── backend/          # Flask后端项目
│   ├── app.py
│   ├── models/
│   ├── routes/
│   └── services/
└── frontend/         # Vue前端项目
    ├── src/
    ├── public/
    └── index.html
```


## 4. 开发计划
### 4.1 第一阶段：基础架构
1. **项目初始化**
   - 搭建前后端项目框架
   - 配置开发环境
   - 设置数据库连接

2. **数据库设计**
   - 设计用户表
   - 设计公司表
   - 设计股票交易表
   - 设计银行账户表

3. **基础API开发**
   - 用户注册/登录
   - 基础数据CRUD接口
   - WebSocket连接测试

### 4.2 第二阶段：核心功能
1. **公司模块**
   - 公司创建功能
   - 股权结构管理
   - 公司经营功能
   - 财务系统实现

2. **银行模块**
   - 基础存取款功能
   - 贷款系统
   - 利率机制
   - 风险控制系统

3. **交易所模块**
   - 基础交易功能
   - 实时行情推送
   - 交易撮合系统
   - 市场监控功能

4. **消息模块**
   - 系统公告
   - 实时消息推送
   - 跨模块通知

### 4.3 第三阶段：前端开发
1. **基础页面**
   - 登录注册页
   - 用户中心
   - 导航菜单

2. **功能页面**
   - 公司管理界面
   - 银行操作界面
   - 交易所界面
   - 实时行情展示

3. **数据可视化**
   - K线图表
   - 成交量图表
   - 实时数据更新

### 4.4 第四阶段：测试优化
1. **功能测试**
   - 单元测试
   - 接口测试
   - 压力测试

2. **性能优化**
   - 数据库优化
   - 缓存优化
   - 并发处理优化

3. **部署上线**
   - 服务器配置
   - 数据库部署
   - 域名配置
   - 监控配置

### 4.5 里程碑和检查点
1. **第一阶段检查点**
   - 基础框架可运行
   - 数据库能正常连接
   - API能正常响应

2. **第二阶段检查点**
   - 核心功能可用
   - 模块间能正常通信
   - 数据流转正常

3. **第三阶段检查点**
   - 界面完整可用
   - 数据展示正常
   - 用户体验良好

4. **第四阶段检查点**
   - 系统稳定运行
   - 性能达标
   - 监控正常

### 4.6 风险管理
1. **技术风险**
   - 实时数据处理延迟
   - 并发处理瓶颈
   - 数据一致性问题

2. **解决方案**
   - 采用WebSocket确保实时性
   - 使用缓存减少数据库压力
   - 实现数据补偿机制

## 5. 记录操作
序号: 001
类型: 新增
模块: 项目文档
描述: 初始化项目文档和开发计划
状态: 完成

序号: 002
类型: 新增
模块: 数据模型
描述: 创建用户、公司、股票、银行相关数据模型
状态: 完成

序号: 003
类型: 新增
模块: 路由
描述: 创建基础路由结构和用户认证接口
状态: 完成

序号: 004
类型: 新增
模块: 数据库
描述: 创建数据库初始化脚本
状态: 完成

序号: 005
类型: 新增
模块: 公司模块
描述: 实现公司创建和查询功能
状态: 完成

序号: 006
类型: 新增
模块: 股票交易
描述: 实现股票交易基础功能（创建卖单和执行交易）
状态: 完成

序号: 007
类型: 新增
模块: 银行模块
描述: 实现银行基础功能（开户、存取款）
状态: 完成

序号: 008
类型: 新增
模块: 银行模块
描述: 实现贷款功能（申请贷款和还款）
状态: 完成

序号: 009
类型: 新增
模块: WebSocket
描述: 实现实时数据推送（股票价格、交易信息、银行更新）
状态: 完成

序号: 010
类型: 新增
模块: 交易撮合
描述: 实现订单簿和自动撮合系统
状态: 完成

序号: 011
类型: 新增
模块: 利率机制
描述: 实现利率计算和自动扣息功能
状态: 完成

序号: 012
类型: 新增
模块: 前端基础
描述: 创建前端项目结构和基础组件
状态: 完成

序号: 013
类型: 新增
模块: 前端页面
描述: 实现登录注册页面
状态: 完成

序号: 014
类型: 新增
模块: 前端组件
描述: 实现导航栏和侧边菜单组件
状态: 完成

序号: 015
类型: 新增
模块: 前端页面
描述: 实现仪表盘页面，展示用户资产和市场概览
状态: 完成

序号: 016
类型: 新增
模块: 前端页面
描述: 实现公司管理界面（列表和创建）
状态: 完成

序号: 017
类型: 新增
模块: 前端页面
描述: 实现公司详情页面，包含基本信息、股价走势和股东列表
状态: 完成

序号: 018
类型: 新增
模块: 前端页面
描述: 实现股票交易界面，包含实时交易和订单簿
状态: 完成

序号: 019
类型: 新增
模块: 前端页面
描述: 实现个人持仓页面，展示持仓明细和盈亏情况
状态: 完成

序号: 020
类型: 新增
模块: 前端页面
描述: 实现交易订单页面，包含订单列表和撤单功能
状态: 完成

序号: 021
类型: 新增
模块: 前端页面
描述: 实现银行账户管理界面，包含账户概览和快捷操作
状态: 完成

序号: 022
类型: 新增
模块: 前端页面
描述: 实现贷款业务界面，包含贷款申请和还款功能
状态: 完成

序号: 023
类型: 新增
模块: 前端页面
描述: 实现转账汇款界面，包含转账操作和记录查询
状态: 完成

序号: 024
类型: 新增
模块: 前端组件
描述: 实现消息通知功能，包含系统通知和交易提醒
状态: 完成

序号: 025
类型: 新增
模块: 前端页面
描述: 实现系统设置功能，包含通知、显示和安全设置
状态: 完成

序号: 026
类型: 新增
模块: 前端服务
描述: 实现全局错误处理和请求拦截功能
状态: 完成

序号: 027
类型: 新增
模块: 前端优化
描述: 实现全局加载状态和页面过渡动画
状态: 完成



