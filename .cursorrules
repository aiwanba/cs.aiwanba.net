# 执行命令流程
1. **查看同步规则**：确保操作符合项目规范
2. **查看项目下一步**：了解当前执行任务
3. **执行具体操作**：按规范进行开发
4. **更新变更记录**：在.cursorrules文件中记录所有变更

# 个人开发规则指南

## 1. 项目管理规则
- 记录所有开发想法和计划
- 追踪功能的开发进度
- 保持开发进度更新

## 2. 代码开发规则
### 2.1 编码风格
- 使用清晰的命名方式
- 编写详细的中文注释
- 保持代码结构简洁

### 2.2 文件组织
- 按功能模块组织文件
- 保持文件结构清晰
- 及时清理未使用的代码

## 3. 功能开发流程
1. 需求分析
   - 明确开发目标
   - 列出具体功能点
   - 设计实现方案

2. 开发实施
   - 按计划编写代码
   - 及时处理问题

## 4. 环境配置
### 4.1 基本信息
- 项目名称: cs_aiwanba_net
- 项目端口: 5010
- Python版本: 3.11.9
- 域名: localhost

### 4.2 启动配置
- 启动方式: gunicorn -c gunicorn_conf.py app:app
- 项目路径: /www/wwwroot/cs.aiwanba.net
- 当前框架: flask
- 入口文件: /www/wwwroot/cs.aiwanba.net/app.py
- 通讯协议: gunicorn
- 应用名称: app

### 4.3 数据库配置
- 数据库: MySQL 5.7.40
- 数据库名: cs_aiwanba_net
- 用户名: cs_aiwanba_net
- 密码: sQz9HSnF5ZcXj9SX
- 主机: localhost
- 端口: 3306

### 4.4 依赖管理
- 依赖文件: requirements.txt
- 镜像源: https://pypi.tuna.tsinghua.edu.cn/simple
- 安装命令: pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

### 4.5 Gunicorn配置
配置文件路径: /www/wwwroot/cs.aiwanba.net/gunicorn_conf.py
主要配置:
- workers: 4
- threads: 2
- user: 'www'
- worker_class: 'uvicorn.workers.UvicornWorker'
- bind: '0.0.0.0:5010'
- 日志级别: info

## 5. 错误处理
- 做好异常捕获
- 记录关键日志
- 提供错误提示

## 6. 变更记录格式
日期：[变更内容]
- 新增：新添加的功能
- 修改：修改的功能
- 修复：修复的问题
- 删除：删除的内容

## 7. 待办事项
### 已完成功能
[在这里记录已经完成的功能]

### 开发中功能
[在这里记录正在开发的功能]

### 计划功能
[在这里记录计划开发的功能]
