# 项目技术栈 (创建 修改 删除都要及时更新)

## 1. 前端
- **Vue.js 3.x**：简单易用，适合快速开发。

## 2. 后端
- **Flask 2.0.1**：轻量级的 Python Web 框架，适合小型到中型应用。

## 3. 数据库
- **MySQL 5.7.40**：关系型数据库，适合大多数应用，支持复杂查询。

## 4. 部署
- 参考文档：[生产环境部署配置文档](doc/生产环境部署配置文档.md)

## 5. 项目目标(创建 修改 删除都要及时更新)
- 这是一个多人玩家与AI一起竞争的股票游戏，玩家可以通过购买和出售股票来获取利润。所有股票都是在交易所交易的，游戏中的股票代表不同的公司，玩家需要根据市场动态做出决策，以便在竞争中获胜。

- 游戏的目标是通过策略性投资和市场分析，成为最终的赢家。玩家需要关注市场新闻、公司财报和其他影响股价的因素，以便做出明智的投资决策。

- 所有的市场数据都是由玩家自己生成和管理的，这意味着每个玩家的决策和策略都会影响市场的走向，增加了游戏的复杂性和趣味性。

- 交易所是24小时开放的，玩家可以随时进行交易，抓住市场机会，增加自己的利润。

## 6. 技术栈详细信息(创建 修改 删除都要及时更新)
- **Vue.js 3.x**：选择它是因为其易于上手和灵活性。
- **Flask 2.0.1**：轻量级框架，适合快速开发和迭代。
- **MySQL 5.7.40**：广泛使用的关系型数据库，支持复杂查询。

## 7. 环境配置(创建 修改 删除都要及时更新)
- 开发环境使用 **Python 3.11.9** 和 **Flask 2.0.1**。
- 生产环境使用 **Gunicorn** 作为 WSGI 服务器。

- **开发环境**：
  - Python 3.11.9
  - Flask 2.0.1
  - 数据库：MySQL 5.7.40
  - 配置类：DevelopmentConfig (DEBUG=True)

- **生产环境**：
  - 部署路径：/www/wwwroot/cs.aiwanba.net
  - 端口：5010
  - 数据库：MySQL 5.7.40 (cs_aiwanba_net)
  - WSGI服务器：Gunicorn
  - 配置类：ProductionConfig (DEBUG=False)

## 8. 常见问题及解决方案(创建 修改 删除都要及时更新)
- **问题**：如何解决依赖包冲突？
  - **解决方案**：使用虚拟环境（如 venv）来隔离项目依赖。

## 9. 未来计划 (创建 修改 删除都要及时更新)


## 10. 项目结构(创建 修改 删除都要及时更新)
- **frontend/**：存放前端代码
  - **src/**：Vue.js源代码目录
- **backend/**：存放后端代码
  - **app/**：Flask应用主目录
    - **__init__.py**：应用初始化和配置
    - **models.py**：数据库模型定义
    - **routes.py**：API路由定义
- **database/**：存放数据库相关文件
- **doc/**：存放项目文档

## 11. 项目文件(创建 修改 删除都要及时更新)
- **config.py**：项目配置文件，包含数据库连接信息和游戏配置
- **requirements.txt**：Python依赖包列表
- **create_structure.sh**：项目目录结构创建脚本
- **backend/app/models.py**：定义User、Stock、Portfolio等数据模型
- **backend/app/routes.py**：定义API接口路由
- **backend/app/__init__.py**：Flask应用初始化
- **doc/生产环境部署配置文档.md**：部署相关配置说明